{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Documents/GitHub/cinema_ebooking/cinema-booking-client/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/login', {\n        email: trimmedEmail,\n        password: trimmedPassword\n      });\n      const token = response.data.token; // Retrieve token\n      localStorage.setItem('token', token); // Store token in localStorage\n      navigate('/');\n    } catch (error) {\n      setError('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"login-title\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Email\",\n            className: \"input-field\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: \"input-field\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-btn\",\n            onClick: handleLogin,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","trimmedEmail","trim","trimmedPassword","response","post","token","data","localStorage","setItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/harsh/Documents/GitHub/cinema_ebooking/cinema-booking-client/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css'; \nimport axios from 'axios';\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    const trimmedEmail = email.trim();\n    const trimmedPassword = password.trim();\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/login', { email: trimmedEmail, password: trimmedPassword });\n      const token = response.data.token;  // Retrieve token\n      localStorage.setItem('token', token);  // Store token in localStorage\n      navigate('/');\n    } catch (error) {\n      setError('Invalid email or password');\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"login-container\">\n        <div className=\"login-right\">\n          <div className=\"login-box\">\n            <h2 className=\"login-title\">Log In</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Email\"\n              className=\"input-field\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"input-field\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button className=\"login-btn\" onClick={handleLogin}>Log In</button>\n            {error && <p className=\"error-message\">{error}</p>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}