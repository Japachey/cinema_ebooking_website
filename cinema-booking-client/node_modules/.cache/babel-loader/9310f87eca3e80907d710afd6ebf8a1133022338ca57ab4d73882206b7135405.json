{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/Documents/GitHub/cinema_ebooking/cinema-booking-client/src/pages/Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './EditProfile.css';\n// import Navbar from '../components/Navbar';\n// import Header from '../components/Header'; // Import the Header component\nimport axios from 'axios'; // Axios for sending data to the server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  // States to control the visibility of sections\n  const [showRequiredInfo, setShowRequiredInfo] = useState(true);\n  const [showPaymentInfo, setShowPaymentInfo] = useState(false);\n  const [showHomeAddress, setShowHomeAddress] = useState(false);\n  const [showCard, setShowCard] = useState([false, false, false]);\n  const [cards, setCards] = useState([{\n    id: 1,\n    nameOnCard: '',\n    cardNumber: '',\n    expirationDate: '',\n    cvc: '',\n    streetAddress: '',\n    city: '',\n    state: '',\n    zipCode: ''\n  }]);\n\n  // Functions to toggle sections\n  const toggleRequiredInfo = () => setShowRequiredInfo(!showRequiredInfo);\n  const togglePaymentInfo = () => setShowPaymentInfo(!showPaymentInfo);\n  const toggleHomeAddress = () => setShowHomeAddress(!showHomeAddress);\n  const toggleCard = index => {\n    setShowCard(showCard.map((card, i) => i === index ? !card : card)); // Toggle only the selected card\n  };\n  const [showAddressPopup, setShowAddressPopup] = useState(false);\n  const [showCardPopup, setShowCardPopup] = useState(false);\n  //    const [showPopup, setShowPopup] = useState(false);\n  const [continueWithoutInfo, setContinueWithoutInfo] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    phoneNumber: '',\n    email: '',\n    password: '',\n    subscribeToPromo: false,\n    cardInfo: {\n      nameOnCard: '',\n      cardNumber: '',\n      expirationDate: '',\n      cvc: '',\n      streetAddress: '',\n      city: '',\n      state: '',\n      zipCode: ''\n    },\n    addressInfo: {\n      streetAddress: '',\n      city: '',\n      state: '',\n      zipCode: ''\n    }\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  let formErrors = {};\n  // Form validation logic\n  const validateForm = () => {\n    if (!formData.firstName) formErrors.firstName = \"First Name is required\";\n    if (!formData.lastName) formErrors.lastName = \"Last Name is required\";\n    if (!formData.phoneNumber) formErrors.phoneNumber = \"Phone Number is required\";\n    if (!formData.email) formErrors.email = \"Email is required\";\n    if (!formData.password) formErrors.password = \"Password is required\";\n    return formErrors;\n  };\n  const validateEmail = email => {\n    // Simple regex for email validation\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailPattern.test(email);\n  };\n  const validateCardNumber = cardNumber => {\n    // Simple regex for card number validation\n    const cardNumberPattern = /^[0-9]{16}$/;\n    return cardNumberPattern.test(cardNumber);\n  };\n  const validateExpirationDate = expirationDate => {\n    // Simple regex for expiration date validation\n    const expirationDatePattern = /^(0[1-9]|1[0-2])\\/[0-9]{2}$/;\n    return expirationDatePattern.test(expirationDate);\n  };\n  const validateCVC = cvc => {\n    // Simple regex for cvc validation\n    const cvcPattern = /^[0-9]{3}$/;\n    return cvcPattern.test(cvc);\n  };\n\n  // Handle input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    if (e) {\n      e.preventDefault();\n    }\n    const formErrors = validateForm();\n    if (formData.email && !validateEmail(formData.email)) {\n      formErrors.email = 'Please enter a valid email address';\n    }\n    if (showPaymentInfo) {\n      if (formData.cardInfo.cardNumber && !validateCardNumber(formData.cardInfo.cardNumber)) {\n        formErrors.cardNumber = 'Card Number must be a 16-digit number';\n      }\n      if (formData.cardInfo.expirationDate && !validateExpirationDate(formData.cardInfo.expirationDate)) {\n        formErrors.expirationDate = 'Expiration Date must be in MM/YY format';\n      }\n      if (formData.cardInfo.cvc && !validateCVC(formData.cardInfo.cvc)) {\n        formErrors.cvc = 'CVC must be a 3-digit number';\n      }\n      if (formData.cardInfo.zipCode && isNaN(formData.cardInfo.zipCode)) {\n        formErrors.billingZipCode = 'Zip Code must be a number';\n      }\n    }\n\n    // if (showHomeAddress) {\n    //     if (formData.addressInfo.zipCode && isNaN(formData.addressInfo.zipCode)) {\n    //         formErrors.homeZipCode = 'Zip Code must be a number';\n    //     }\n    // }\n\n    setErrors(formErrors);\n    console.log('Form Errors:', formErrors);\n    console.log('Form Data:', formData);\n    if (Object.keys(formErrors).length === 0) {\n      if (formData.cardInfo.nameOnCard || formData.cardInfo.cardNumber || formData.cardInfo.expirationDate || formData.cardInfo.cvc || formData.cardInfo.streetAddress || formData.cardInfo.city || formData.cardInfo.state || formData.cardInfo.zipCode) {\n        if (!formData.cardInfo.nameOnCard || !formData.cardInfo.cardNumber || !formData.cardInfo.expirationDate || !formData.cardInfo.cvc || !formData.cardInfo.streetAddress || !formData.cardInfo.city || !formData.cardInfo.state || !formData.cardInfo.zipCode) {\n          setShowCardPopup(true); // Show popup if the card info is incomplete\n          return;\n        }\n      }\n      if (formData.addressInfo.streetAddress || formData.addressInfo.city || formData.addressInfo.state || formData.addressInfo.zipCode) {\n        if (!formData.addressInfo.streetAddress || !formData.addressInfo.city || !formData.addressInfo.state || !formData.addressInfo.zipCode) {\n          setShowAddressPopup(true); // Show popup if the address is incomplete\n          return;\n        }\n      }\n      try {\n        // Send data to the server\n        const dataToSend = {\n          ...formData,\n          cards: cards // Include the array of cards\n        };\n        await axios.post('http://127.0.0.1:5000/api/register', dataToSend).then(response => {\n          console.log('Response:', response.data);\n          if (response.status === 200) {\n            setSuccessMessage(\"Registration successful! Please check your email for confirmation.\");\n          }\n        });\n      } catch (e) {\n        console.error(\"Error registering the user:\", e);\n        // setErrors({ api: \"Registration failed. Please try again later.\" });\n        if (e.response && e.response.data && e.response.data.error) {\n          if (e.response.data.error === \"Email already exists.\") {\n            const newFormErrors = {\n              ...formErrors\n            };\n            newFormErrors.email = \"Email already exists\";\n            setErrors(newFormErrors); // Update state properly\n          }\n        }\n        // setErrors({ api: \"Registration failed. Please try again later.\" });\n      }\n    }\n  };\n  const handleCloseAddressPopup = continueWithoutInfo => {\n    setShowAddressPopup(false);\n    setContinueWithoutInfo(continueWithoutInfo);\n    if (continueWithoutInfo) {\n      // Clear the address info in the formData\n      setFormData(prevState => ({\n        ...prevState,\n        addressInfo: {\n          streetAddress: '',\n          city: '',\n          state: '',\n          zipCode: ''\n        }\n      }));\n    } else {\n      if (!formData.addressInfo.streetAddress) formErrors.homeStreetAddress = \"Street Address is required\";\n      if (!formData.addressInfo.city) formErrors.homeCity = \"City is required\";\n      if (!formData.addressInfo.state) formErrors.homeState = \"State is required\";\n      if (!formData.addressInfo.zipCode) formErrors.homeZipCode = \"Zip Code is required\";\n      setErrors(formErrors);\n    }\n  };\n  const handleCloseCardPopup = continueWithoutInfo => {\n    setShowCardPopup(false);\n    setContinueWithoutInfo(continueWithoutInfo);\n    if (continueWithoutInfo) {\n      // Clear the address info in the formData\n      setFormData(prevState => ({\n        ...prevState,\n        cardInfo: {\n          nameOnCard: '',\n          cardNumber: '',\n          expirationDate: '',\n          cvc: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zipCode: ''\n        }\n      }));\n    } else {\n      if (!formData.cardInfo.nameOnCard) formErrors.nameOnCard = \"Name on Card is required\";\n      if (!formData.cardInfo.cardNumber) formErrors.cardNumber = \"Card Number is required\";\n      if (!formData.cardInfo.expirationDate) formErrors.expirationDate = \"Expiration Date is required\";\n      if (!formData.cardInfo.cvc) formErrors.cvc = \"CVC is required\";\n      if (!formData.cardInfo.streetAddress) formErrors.billingStreetAddress = \"Street Address is required\";\n      if (!formData.cardInfo.city) formErrors.billingCity = \"City is required\";\n      if (!formData.cardInfo.state) formErrors.billingState = \"State is required\";\n      if (!formData.cardInfo.zipCode) formErrors.billingZipCode = \"Zip Code is required\";\n      setErrors(formErrors);\n    }\n  };\n  useEffect(() => {\n    if (continueWithoutInfo) {\n      handleSubmit(); // Now that address info is cleared, submit the form\n      setContinueWithoutInfo(false); // Reset after submission\n    }\n  }, [continueWithoutInfo, formData]); // Listen for changes in formData and continueWithoutInfo\n\n  const addNewCard = () => {\n    if (cards.length < 3) {\n      setCards([...cards, {\n        id: cards.length + 1,\n        nameOnCard: '',\n        cardNumber: '',\n        expirationDate: '',\n        cvc: '',\n        streetAddress: '',\n        city: '',\n        state: '',\n        zipCode: ''\n      }]);\n    }\n  };\n  const handleCardChange = (index, field, value) => {\n    // // const updatedCards = cards.map((card, i) => (i === index ? { ...card, [field]: value } : card));\n    // const updatedCards = [...cards];\n    // updatedCards[index][field] = value;\n\n    // setCards(updatedCards);\n    // setFormData({\n    //     ...formData,\n    //     cardInfo: { ...formData.cardInfo, [field]: value }\n    // })\n\n    // Update the cards array based on the index\n    const updatedCards = [...cards];\n    updatedCards[index][field] = value;\n    setCards(updatedCards);\n\n    // Dynamically update the correct field in formData.cardInfo\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      cardInfo: {\n        ...prevFormData.cardInfo,\n        [field]: value\n      }\n    }));\n  };\n  const handleRemoveCard = index => {\n    if (cards.length > 1) {\n      const updatedCards = cards.filter((_, i) => i !== index);\n      setCards(updatedCards);\n    }\n    setFormData(prevState => ({\n      ...prevState,\n      cardInfo: {\n        nameOnCard: '',\n        cardNumber: '',\n        expirationDate: '',\n        cvc: '',\n        streetAddress: '',\n        city: '',\n        state: '',\n        zipCode: ''\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleRequiredInfo,\n            className: \"section-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Required Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: showRequiredInfo ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), showRequiredInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-fields\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"firstName\",\n                  value: formData.firstName,\n                  onChange: handleChange,\n                  className: errors.firstName ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 33\n                }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"lastName\",\n                  value: formData.lastName,\n                  onChange: handleChange,\n                  className: errors.lastName ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 33\n                }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phoneNumber\",\n              value: formData.phoneNumber,\n              onChange: handleChange,\n              className: errors.phoneNumber ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 25\n            }, this), errors.phoneNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              className: errors.email ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 25\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              className: errors.password ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 25\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"promo\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"subscribeToPromo\",\n                  checked: formData.subscribeToPromo,\n                  onChange: () => setFormData({\n                    ...formData,\n                    subscribeToPromo: !formData.subscribeToPromo\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 33\n                }, this), \"Subscribe to Promotions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: togglePaymentInfo,\n            className: \"section-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Payment Information (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: showPaymentInfo ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this), showPaymentInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-content\",\n            children: [cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => toggleCard(index),\n                className: \"section-toggle\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Card \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: showCard[index] ? '▲' : '▼'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 29\n              }, this), showCard[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Name on Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"nameOnCard\"\n                  // value={formData.cardInfo.nameOnCard}\n                  ,\n                  value: card.nameOnCard,\n                  onChange: e => handleCardChange(index, 'nameOnCard', e.target.value),\n                  className: errors.nameOnCard ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 37\n                }, this), errors.nameOnCard && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.nameOnCard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 59\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Card Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"cardNumber\"\n                  // value={formData.cardInfo.cardNumber}\n                  ,\n                  value: card.cardNumber,\n                  onChange: e => handleCardChange(index, 'cardNumber', e.target.value),\n                  className: errors.cardNumber ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 37\n                }, this), errors.cardNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.cardNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 59\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Expiration Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"expirationDate\"\n                  // value={formData.cardInfo.expirationDate}\n                  ,\n                  value: card.expirationDate,\n                  onChange: e => handleCardChange(index, 'expirationDate', e.target.value),\n                  className: errors.expirationDate ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 37\n                }, this), errors.expirationDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.expirationDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 63\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"CVC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"cvc\"\n                  //value={formData.cardInfo.cvc}\n                  ,\n                  value: card.cvc,\n                  onChange: e => handleCardChange(index, 'cvc', e.target.value),\n                  className: errors.cvc ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 37\n                }, this), errors.cvc && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.cvc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Street Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"streetAddress\"\n                  //value={formData.cardInfo.streetAddress}\n                  ,\n                  value: card.streetAddress,\n                  onChange: e => handleCardChange(index, 'streetAddress', e.target.value),\n                  className: errors.billingStreetAddress ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 37\n                }, this), errors.billingStreetAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.billingStreetAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"city\"\n                  //value={formData.cardInfo.city}\n                  ,\n                  value: card.city,\n                  onChange: e => handleCardChange(index, 'city', e.target.value),\n                  className: errors.billingCity ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 37\n                }, this), errors.billingCity && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.billingCity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 60\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"state\"\n                  //value={formData.cardInfo.state}\n                  ,\n                  value: card.state,\n                  onChange: e => handleCardChange(index, 'state', e.target.value),\n                  className: errors.billingState ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 37\n                }, this), errors.billingState && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.billingState\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Zip Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"zipCode\"\n                  //value={formData.cardInfo.zipCode}\n                  ,\n                  value: card.zipCode,\n                  onChange: e => handleCardChange(index, 'zipCode', e.target.value),\n                  className: errors.billingZipCode ? 'error' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 37\n                }, this), errors.billingZipCode && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: errors.billingZipCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 63\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"center-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn white\",\n                    onClick: () => handleRemoveCard(index),\n                    children: \"Remove Card\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 25\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn red\",\n                onClick: addNewCard,\n                disabled: cards.length >= 3 // disable if 3 cards are already added\n                ,\n                children: \"+ Add New Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleHomeAddress,\n            className: \"section-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Home Address (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: showHomeAddress ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 17\n          }, this), showHomeAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"streetAddress\",\n              value: formData.addressInfo.streetAddress,\n              onChange: e => setFormData({\n                ...formData,\n                addressInfo: {\n                  ...formData.addressInfo,\n                  streetAddress: e.target.value\n                }\n              }),\n              className: errors.homeStreetAddress ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 25\n            }, this), errors.homeStreetAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.homeStreetAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 54\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              value: formData.addressInfo.city,\n              onChange: e => setFormData({\n                ...formData,\n                addressInfo: {\n                  ...formData.addressInfo,\n                  city: e.target.value\n                }\n              }),\n              className: errors.homeCity ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 25\n            }, this), errors.homeCity && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.homeCity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"state\",\n              value: formData.addressInfo.state,\n              onChange: e => setFormData({\n                ...formData,\n                addressInfo: {\n                  ...formData.addressInfo,\n                  state: e.target.value\n                }\n              }),\n              className: errors.homeState ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 25\n            }, this), errors.homeState && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.homeState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Zip Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"zipCode\",\n              value: formData.addressInfo.zipCode,\n              onChange: e => setFormData({\n                ...formData,\n                addressInfo: {\n                  ...formData.addressInfo,\n                  zipCode: e.target.value\n                }\n              }),\n              className: errors.homeZipCode ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 25\n            }, this), errors.homeZipCode && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.homeZipCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            className: \"btn red\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 32\n        }, this), errors.api && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.api\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this), showAddressPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your home address information is incomplete. Would you like to continue editing or create account without address information?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn white\",\n            onClick: () => handleCloseAddressPopup(false),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn red\",\n            onClick: () => {\n              handleCloseAddressPopup(true);\n            },\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 17\n      }, this), showCardPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your payment card information is incomplete. Would you like to continue editing or create account without card information?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn white\",\n            onClick: () => handleCloseCardPopup(false),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn red\",\n            onClick: () => {\n              handleCloseCardPopup(true);\n            },\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"roekwSW1MMIvmdYIT5D3ASCjwME=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Registration","_s","showRequiredInfo","setShowRequiredInfo","showPaymentInfo","setShowPaymentInfo","showHomeAddress","setShowHomeAddress","showCard","setShowCard","cards","setCards","id","nameOnCard","cardNumber","expirationDate","cvc","streetAddress","city","state","zipCode","toggleRequiredInfo","togglePaymentInfo","toggleHomeAddress","toggleCard","index","map","card","i","showAddressPopup","setShowAddressPopup","showCardPopup","setShowCardPopup","continueWithoutInfo","setContinueWithoutInfo","formData","setFormData","firstName","lastName","phoneNumber","email","password","subscribeToPromo","cardInfo","addressInfo","errors","setErrors","successMessage","setSuccessMessage","formErrors","validateForm","validateEmail","emailPattern","test","validateCardNumber","cardNumberPattern","validateExpirationDate","expirationDatePattern","validateCVC","cvcPattern","handleChange","e","name","value","target","handleSubmit","preventDefault","isNaN","billingZipCode","console","log","Object","keys","length","dataToSend","post","then","response","data","status","error","newFormErrors","handleCloseAddressPopup","prevState","homeStreetAddress","homeCity","homeState","homeZipCode","handleCloseCardPopup","billingStreetAddress","billingCity","billingState","addNewCard","handleCardChange","field","updatedCards","prevFormData","handleRemoveCard","filter","_","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","onChange","checked","disabled","api","_c","$RefreshReg$"],"sources":["/Users/harsh/Documents/GitHub/cinema_ebooking/cinema-booking-client/src/pages/Registration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './EditProfile.css';\n// import Navbar from '../components/Navbar';\n// import Header from '../components/Header'; // Import the Header component\nimport axios from 'axios'; // Axios for sending data to the server\n\nconst Registration = () => {\n   // States to control the visibility of sections\n   const [showRequiredInfo, setShowRequiredInfo] = useState(true);\n   const [showPaymentInfo, setShowPaymentInfo] = useState(false);\n   const [showHomeAddress, setShowHomeAddress] = useState(false);\n   const [showCard, setShowCard] = useState([false, false, false]);\n   const [cards, setCards] = useState([{ id: 1, nameOnCard: '', cardNumber: '', expirationDate: '', cvc: '', streetAddress: '', city: '', state: '', zipCode: '' }]);\n   \n\n   // Functions to toggle sections\n   const toggleRequiredInfo = () => setShowRequiredInfo(!showRequiredInfo);\n   const togglePaymentInfo = () => setShowPaymentInfo(!showPaymentInfo);\n   const toggleHomeAddress = () => setShowHomeAddress(!showHomeAddress);\n   const toggleCard = (index) => {\n    setShowCard(showCard.map((card, i) => (i === index ? !card : card))); // Toggle only the selected card\n    };\n\n   const [showAddressPopup, setShowAddressPopup] = useState(false);\n   const [showCardPopup, setShowCardPopup] = useState(false);\n//    const [showPopup, setShowPopup] = useState(false);\n   const [continueWithoutInfo, setContinueWithoutInfo] = useState(false); \n\n   const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        phoneNumber: '',\n        email: '',\n        password: '',\n        subscribeToPromo: false,\n        cardInfo: {\n            nameOnCard: '',\n            cardNumber: '',\n            expirationDate: '',\n            cvc: '',\n            streetAddress: '',\n            city: '',\n            state: '',\n            zipCode: ''\n        },\n        addressInfo: {\n            streetAddress: '',\n            city: '',\n            state: '',\n            zipCode: ''\n        }\n    });\n\n    const [errors, setErrors] = useState({});\n    const [successMessage, setSuccessMessage] = useState('');\n\n    let formErrors = {};\n    // Form validation logic\n    const validateForm = () => {\n        if (!formData.firstName) formErrors.firstName = \"First Name is required\";\n        if (!formData.lastName) formErrors.lastName = \"Last Name is required\";\n        if (!formData.phoneNumber) formErrors.phoneNumber = \"Phone Number is required\";\n        if (!formData.email) formErrors.email = \"Email is required\";\n        if (!formData.password) formErrors.password = \"Password is required\";\n\n        return formErrors;\n    };\n\n    const validateEmail = (email) => {\n        // Simple regex for email validation\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailPattern.test(email);\n    };\n\n    const validateCardNumber = (cardNumber) => {\n        // Simple regex for card number validation\n        const cardNumberPattern = /^[0-9]{16}$/;\n        return cardNumberPattern.test(cardNumber);\n    };\n\n    const validateExpirationDate = (expirationDate) => {\n        // Simple regex for expiration date validation\n        const expirationDatePattern = /^(0[1-9]|1[0-2])\\/[0-9]{2}$/;\n        return expirationDatePattern.test(expirationDate);\n    };\n\n    const validateCVC = (cvc) => {\n        // Simple regex for cvc validation\n        const cvcPattern = /^[0-9]{3}$/;\n        return cvcPattern.test(cvc);\n    };\n\n    // Handle input change\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value\n        });\n    };\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n        const formErrors = validateForm();\n        if (formData.email && !validateEmail(formData.email)) {\n            formErrors.email = 'Please enter a valid email address';\n        }\n\n        if (showPaymentInfo) {\n            if (formData.cardInfo.cardNumber && !validateCardNumber(formData.cardInfo.cardNumber)) {\n                formErrors.cardNumber = 'Card Number must be a 16-digit number';\n            }\n            if (formData.cardInfo.expirationDate && !validateExpirationDate(formData.cardInfo.expirationDate)) {\n                formErrors.expirationDate = 'Expiration Date must be in MM/YY format';\n            }\n            if (formData.cardInfo.cvc && !validateCVC(formData.cardInfo.cvc)) {\n                formErrors.cvc = 'CVC must be a 3-digit number';\n            }\n            if (formData.cardInfo.zipCode && isNaN(formData.cardInfo.zipCode)) {\n                formErrors.billingZipCode = 'Zip Code must be a number';\n            }\n        }\n\n        // if (showHomeAddress) {\n        //     if (formData.addressInfo.zipCode && isNaN(formData.addressInfo.zipCode)) {\n        //         formErrors.homeZipCode = 'Zip Code must be a number';\n        //     }\n        // }\n\n        setErrors(formErrors);\n        console.log('Form Errors:', formErrors);\n        console.log('Form Data:', formData);\n        if (Object.keys(formErrors).length === 0) {\n            if (formData.cardInfo.nameOnCard || formData.cardInfo.cardNumber || formData.cardInfo.expirationDate || formData.cardInfo.cvc || formData.cardInfo.streetAddress || formData.cardInfo.city || formData.cardInfo.state || formData.cardInfo.zipCode) {\n                if (!formData.cardInfo.nameOnCard || !formData.cardInfo.cardNumber || !formData.cardInfo.expirationDate || !formData.cardInfo.cvc || !formData.cardInfo.streetAddress || !formData.cardInfo.city || !formData.cardInfo.state || !formData.cardInfo.zipCode) {\n                    setShowCardPopup(true);  // Show popup if the card info is incomplete\n                    return;\n                }\n            }\n            \n            if (formData.addressInfo.streetAddress || formData.addressInfo.city || formData.addressInfo.state || formData.addressInfo.zipCode) {\n                if (!formData.addressInfo.streetAddress || !formData.addressInfo.city || !formData.addressInfo.state || !formData.addressInfo.zipCode) {\n                    setShowAddressPopup(true);  // Show popup if the address is incomplete\n                    return;\n                }\n            }\n\n            try {\n                // Send data to the server\n                const dataToSend = {\n                    ...formData,\n                    cards: cards // Include the array of cards\n                };\n                await axios.post('http://127.0.0.1:5000/api/register', dataToSend)\n                .then(response => {\n                    console.log('Response:', response.data);\n                    if (response.status === 200) {\n                        setSuccessMessage(\"Registration successful! Please check your email for confirmation.\");\n                    }\n                })\n                    \n            } catch (e) {\n                console.error(\"Error registering the user:\", e);\n                // setErrors({ api: \"Registration failed. Please try again later.\" });\n                if (e.response && e.response.data && e.response.data.error) {\n                    \n                    if (e.response.data.error === \"Email already exists.\") {\n                        const newFormErrors = { ...formErrors }; \n                        newFormErrors.email = \"Email already exists\";\n                        setErrors(newFormErrors); // Update state properly\n                    }\n                    \n                }\n                // setErrors({ api: \"Registration failed. Please try again later.\" });\n            }\n        } \n    };\n\n    const handleCloseAddressPopup = (continueWithoutInfo) => {\n        setShowAddressPopup(false);\n        setContinueWithoutInfo(continueWithoutInfo);\n\n        if (continueWithoutInfo) {\n            // Clear the address info in the formData\n            setFormData((prevState) => ({\n                ...prevState,\n                addressInfo: {\n                    streetAddress: '',\n                    city: '',\n                    state: '',\n                    zipCode: ''\n                }\n            }));\n        } else {\n            if (!formData.addressInfo.streetAddress) formErrors.homeStreetAddress = \"Street Address is required\";\n            if (!formData.addressInfo.city) formErrors.homeCity = \"City is required\";\n            if (!formData.addressInfo.state) formErrors.homeState = \"State is required\";\n            if (!formData.addressInfo.zipCode) formErrors.homeZipCode = \"Zip Code is required\";\n            setErrors(formErrors);\n        }\n    };\n\n    const handleCloseCardPopup = (continueWithoutInfo) => {\n        setShowCardPopup(false);\n        setContinueWithoutInfo(continueWithoutInfo);\n\n        if (continueWithoutInfo) {\n            // Clear the address info in the formData\n            setFormData((prevState) => ({\n                ...prevState,\n                cardInfo: {\n                    nameOnCard: '',\n                    cardNumber: '',\n                    expirationDate: '',\n                    cvc: '',\n                    streetAddress: '',\n                    city: '',\n                    state: '',\n                    zipCode: ''\n                }\n            }));\n        } else {\n            if (!formData.cardInfo.nameOnCard) formErrors.nameOnCard = \"Name on Card is required\";\n            if (!formData.cardInfo.cardNumber) formErrors.cardNumber = \"Card Number is required\";\n            if (!formData.cardInfo.expirationDate) formErrors.expirationDate = \"Expiration Date is required\";\n            if (!formData.cardInfo.cvc) formErrors.cvc = \"CVC is required\";\n            if (!formData.cardInfo.streetAddress) formErrors.billingStreetAddress = \"Street Address is required\";\n            if (!formData.cardInfo.city) formErrors.billingCity = \"City is required\";\n            if (!formData.cardInfo.state) formErrors.billingState = \"State is required\";\n            if (!formData.cardInfo.zipCode) formErrors.billingZipCode = \"Zip Code is required\"\n            setErrors(formErrors);\n        }\n    };\n\n    useEffect(() => {\n        if (continueWithoutInfo) {\n            handleSubmit(); // Now that address info is cleared, submit the form\n            setContinueWithoutInfo(false); // Reset after submission\n        }\n    }, [continueWithoutInfo, formData]); // Listen for changes in formData and continueWithoutInfo\n\n    const addNewCard = () => {\n        if (cards.length < 3) {\n            setCards([...cards, { id: cards.length + 1, nameOnCard: '', cardNumber: '', expirationDate: '', cvc: '', streetAddress: '', city: '', state: '', zipCode: '' }]);\n        }\n    };\n    \n    const handleCardChange = (index, field, value) => {\n        // // const updatedCards = cards.map((card, i) => (i === index ? { ...card, [field]: value } : card));\n        // const updatedCards = [...cards];\n        // updatedCards[index][field] = value;\n        \n        // setCards(updatedCards);\n        // setFormData({\n        //     ...formData,\n        //     cardInfo: { ...formData.cardInfo, [field]: value }\n        // })\n\n        // Update the cards array based on the index\n        const updatedCards = [...cards];\n        updatedCards[index][field] = value;\n        setCards(updatedCards);\n\n        // Dynamically update the correct field in formData.cardInfo\n        setFormData((prevFormData) => ({\n            ...prevFormData,\n            cardInfo: {\n                ...prevFormData.cardInfo,\n                [field]: value\n            }\n        }));\n    };\n\n    const handleRemoveCard = (index) => {\n        if (cards.length > 1) {\n            const updatedCards = cards.filter((_, i) => i !== index);\n            setCards(updatedCards);\n        }\n        setFormData((prevState) => ({\n            ...prevState,\n            cardInfo: {\n                nameOnCard: '',\n                cardNumber: '',\n                expirationDate: '',\n                cvc: '',\n                streetAddress: '',\n                city: '',\n                state: '',\n                zipCode: ''\n            }\n        }));\n    }  \n\n   return (\n    <div>\n        {/*<Navbar />*/}\n        <div className=\"registration-container\">\n            <h1>Create Profile</h1>\n\n            <form onSubmit={handleSubmit}>\n            {/* Required Information */}\n            <div className=\"section\">\n                <button type=\"button\" onClick={toggleRequiredInfo} className=\"section-toggle\">\n                    <span>Required Information</span> {/* Wrap the text in a span */}\n                    <span>{showRequiredInfo ? '▲' : '▼'}</span> {/* The arrow */}\n                </button>\n\n                {showRequiredInfo && (\n                    <div className=\"section-content\">\n                         <div className=\"name-fields\">\n                            <div className=\"name-field\">\n                                <p>First Name</p>\n                                <input \n                                    type=\"text\" \n                                    name=\"firstName\"\n                                    value={formData.firstName}\n                                    onChange={handleChange}\n                                    className={errors.firstName ? 'error' : ''}      \n                                />\n                                {errors.firstName && <p className=\"error-message\">{errors.firstName}</p>}\n                            </div>\n                            <div className=\"name-field\">\n                                <p>Last Name</p>\n                                <input \n                                    type=\"text\" \n                                    name=\"lastName\"\n                                    value={formData.lastName}\n                                    onChange={handleChange}\n                                    className={errors.lastName ? 'error' : ''} \n                                /> \n                                {errors.lastName && <p className=\"error-message\">{errors.lastName}</p>}\n                            </div>\n                        </div>\n                        <p>Phone Number</p>\n                        <input \n                            type=\"text\"\n                            name=\"phoneNumber\"\n                            value={formData.phoneNumber}\n                            onChange={handleChange} \n                            className={errors.phoneNumber ? 'error' : ''}    \n                        />\n                        {errors.phoneNumber && <p className=\"error-message\">{errors.phoneNumber}</p>}\n                        <p>Email</p>\n                        <input \n                            type=\"email\" \n                            name=\"email\"\n                            value={formData.email}\n                            onChange={handleChange}\n                            className={errors.email ? 'error' : ''} \n                        />\n                        {errors.email && <p className=\"error-message\">{errors.email}</p>}\n                        <p>Password</p>\n                        <input \n                            type=\"password\" \n                            name=\"password\"\n                            value={formData.password}\n                            onChange={handleChange}\n                            className={errors.password ? 'error' : ''} \n                        /> \n                        {errors.password && <p className=\"error-message\">{errors.password}</p>}\n\n                        {/* Promotion Subscription */}\n                        <div className=\"promo\">\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"subscribeToPromo\"\n                                    checked={formData.subscribeToPromo}\n                                    onChange={() =>\n                                        setFormData({ ...formData, subscribeToPromo: !formData.subscribeToPromo })\n                                    }\n                                />\n                                Subscribe to Promotions\n                            </label>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {/* Payment Information */}\n            <div className=\"section\">\n                <button type=\"button\" onClick={togglePaymentInfo} className=\"section-toggle\">\n                    <span>Payment Information (Optional)</span>\n                    <span>{showPaymentInfo ? '▲' : '▼'}</span>\n                </button>\n                {showPaymentInfo && (\n                    <div className=\"section-content\">\n                        {/* Toggle for Card 1 */}\n                        {cards.map((card, index) => (\n                        <div key={index} className=\"section\">\n                            <button type=\"button\" onClick={() => toggleCard(index)} className=\"section-toggle\">\n                                <span>Card {index + 1}</span>\n                                <span>{showCard[index] ? '▲' : '▼'}</span>\n                            </button>\n\n                            {showCard[index] && (\n                                <div className=\"section-content\">\n                                    <p>Name on Card</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"nameOnCard\"\n                                        // value={formData.cardInfo.nameOnCard}\n                                        value={card.nameOnCard}\n                                        onChange={(e) => handleCardChange(index, 'nameOnCard', e.target.value)}\n                                        className={errors.nameOnCard ? 'error' : ''} \n                                    />\n                                    {errors.nameOnCard && <p className=\"error-message\">{errors.nameOnCard}</p>}\n                                    <p>Card Number</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"cardNumber\"\n                                        // value={formData.cardInfo.cardNumber}\n                                        value={card.cardNumber}\n                                        onChange={(e) => handleCardChange(index, 'cardNumber', e.target.value)}\n                                        className={errors.cardNumber ? 'error' : ''} \n                                    />\n                                    {errors.cardNumber && <p className=\"error-message\">{errors.cardNumber}</p>}\n                                    <p>Expiration Date</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"expirationDate\"\n                                        // value={formData.cardInfo.expirationDate}\n                                        value={card.expirationDate}\n                                        onChange={(e) => handleCardChange(index, 'expirationDate', e.target.value)}\n                                        className={errors.expirationDate ? 'error' : ''} \n                                    />\n                                    {errors.expirationDate && <p className=\"error-message\">{errors.expirationDate}</p>}\n                                    <p>CVC</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"cvc\"\n                                        //value={formData.cardInfo.cvc}\n                                        value={card.cvc}\n                                        onChange={(e) => handleCardChange(index, 'cvc', e.target.value)}\n                                        className={errors.cvc ? 'error' : ''} \n                                    />\n                                    {errors.cvc && <p className=\"error-message\">{errors.cvc}</p>}\n                                    <p>Street Address</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"streetAddress\"\n                                        //value={formData.cardInfo.streetAddress}\n                                        value={card.streetAddress}\n                                        onChange={(e) => handleCardChange(index, 'streetAddress', e.target.value)}\n                                        className={errors.billingStreetAddress ? 'error' : ''} \n                                    />\n                                    {errors.billingStreetAddress && <p className=\"error-message\">{errors.billingStreetAddress}</p>}\n                                    <p>City</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"city\"\n                                        //value={formData.cardInfo.city}\n                                        value={card.city}\n                                        onChange={(e) => handleCardChange(index, 'city', e.target.value)}\n                                        className={errors.billingCity ? 'error' : ''}\n                                    />\n                                    {errors.billingCity && <p className=\"error-message\">{errors.billingCity}</p>}\n                                    <p>State</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"state\"\n                                        //value={formData.cardInfo.state}\n                                        value={card.state}\n                                        onChange={(e) => handleCardChange(index, 'state', e.target.value)}\n                                        className={errors.billingState ? 'error' : ''}\n                                    />\n                                    {errors.billingState && <p className=\"error-message\">{errors.billingState}</p>}\n                                    <p>Zip Code</p>\n                                    <input \n                                        type=\"text\"\n                                        name=\"zipCode\"\n                                        //value={formData.cardInfo.zipCode}\n                                        value={card.zipCode}\n                                        onChange={(e) => handleCardChange(index, 'zipCode', e.target.value)}\n                                        className={errors.billingZipCode ? 'error' : ''}\n                                    />\n                                    {errors.billingZipCode && <p className=\"error-message\">{errors.billingZipCode}</p>}\n                                    <div className=\"center-btn\">\n                                        {/* <button type=\"button\" className=\"btn red\">Save Card</button> */}\n                                        <button type=\"button\" className=\"btn white\" onClick={() => handleRemoveCard(index)}>Remove Card</button>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                        ))}\n                        <div className=\"center-btn\">\n                            <button \n                                type=\"button\" \n                                className=\"btn red\" \n                                onClick={addNewCard} \n                                disabled={cards.length >= 3} // disable if 3 cards are already added\n                            >\n                                + Add New Card\n                            </button>\n                        </div>\n                    </div>\n                    \n                )}\n            </div>\n\n\n            {/* Home Address */}\n            <div className=\"section\">\n                <button type=\"button\" onClick={toggleHomeAddress} className=\"section-toggle\">\n                    <span>Home Address (Optional)</span>\n                    <span>{showHomeAddress ? '▲' : '▼'}</span>\n                </button>\n                {showHomeAddress && (\n                    <div className=\"section-content\">\n                        <p>Street Address</p>\n                        <input \n                            type=\"text\"\n                            name=\"streetAddress\"\n                            value={formData.addressInfo.streetAddress}\n                            onChange={(e) =>\n                                setFormData({\n                                    ...formData,\n                                    addressInfo: { ...formData.addressInfo, streetAddress: e.target.value }\n                                })\n                            }\n                            className={errors.homeStreetAddress ? 'error' : ''} \n                        />\n                        {errors.homeStreetAddress && <p className=\"error-message\">{errors.homeStreetAddress}</p>}\n                        <p>City</p>\n                        <input \n                            type=\"text\"\n                            name=\"city\"\n                            value={formData.addressInfo.city}\n                            onChange={(e) =>\n                                setFormData({\n                                    ...formData,\n                                    addressInfo: { ...formData.addressInfo, city: e.target.value }\n                                })\n                            }\n                            className={errors.homeCity ? 'error' : ''}\n                        />\n                        {errors.homeCity && <p className=\"error-message\">{errors.homeCity}</p>}\n                        <p>State</p>\n                        <input \n                            type=\"text\"\n                            name=\"state\"\n                            value={formData.addressInfo.state}\n                            onChange={(e) =>\n                                setFormData({\n                                    ...formData,\n                                    addressInfo: { ...formData.addressInfo, state: e.target.value }\n                                })\n                            }\n                            className={errors.homeState ? 'error' : ''}\n                        />\n                        {errors.homeState && <p className=\"error-message\">{errors.homeState}</p>}\n                        <p>Zip Code</p>\n                        <input \n                            type=\"text\"\n                            name=\"zipCode\"\n                            value={formData.addressInfo.zipCode}\n                            onChange={(e) =>\n                                setFormData({\n                                    ...formData,\n                                    addressInfo: { ...formData.addressInfo, zipCode: e.target.value }\n                                })\n                            }\n                            className={errors.homeZipCode ? 'error' : ''}\n                        />\n                        {errors.homeZipCode && <p className=\"error-message\">{errors.homeZipCode}</p>}\n                    </div>\n                )}\n            </div>\n\n            <div className=\"center-btn\">\n                <button type=\"submit\" onClick={handleSubmit} className=\"btn red\">Create Account</button>\n            </div>\n\n            {successMessage && <p className=\"success\">{successMessage}</p>}\n            {errors.api && <p className=\"error\">{errors.api}</p>}\n            </form>\n            {showAddressPopup && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup\">\n                        <p>Your home address information is incomplete. Would you like to continue editing or create account without address information?</p>\n                        <button className=\"btn white\" onClick={() => handleCloseAddressPopup(false)}>Go Back</button>\n                        <button className=\"btn red\" onClick={() => { handleCloseAddressPopup(true) }}>Create Account</button>\n                    </div>\n                </div>\n            )}\n            {showCardPopup && (\n                <div className=\"popup-overlay\">\n                    <div className=\"popup\">\n                        <p>Your payment card information is incomplete. Would you like to continue editing or create account without card information?</p>\n                        <button className=\"btn white\" onClick={() => handleCloseCardPopup(false)}>Go Back</button>\n                        <button className=\"btn red\" onClick={() => { handleCloseCardPopup(true) }}>Create Account</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    </div>\n   );\n};\n\nexport default Registration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}